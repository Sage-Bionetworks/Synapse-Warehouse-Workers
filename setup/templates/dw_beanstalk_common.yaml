AWSTemplateFormatVersion: 2010-09-09
Description: Basics for Beanstalk Datawarehouse
Parameters:
  DwEbAppName:
    Description: Elastic Beanstalk Datawarehouse Application Name
    Type: String
    Default: 'beanstalk-dw'
  DwAppDeployBucket:
    Description: Bucket where beanstalk deploys apps from
    Type: String
  SnsBounceNotificationEndpoint:
    Type: String
    Description: Email address for SNS bounce notifications
  SnsNotificationEndpoint:
    Type: String
    Description: Email address for AWS SNS notifications
Resources:
  DwBeanstalkApplication:
    Type: 'AWS::ElasticBeanstalk::Application'
    Properties:
      ApplicationName: !Ref DwEbAppName
  DwS3AppDeployBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref DwAppDeployBucket
  LoadBalancerAccessLogsBucket:
    Type: 'AWS::S3::Bucket'
  LoadBalancerAccessLogsBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref LoadBalancerAccessLogsBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: ModAccess
            Action:
              - 's3:PutObject'
            Effect: Allow
            Resource:
              - !Join
                - ''
                - - !GetAtt LoadBalancerAccessLogsBucket.Arn
                  - '/*'
            Principal:
              AWS:
                - 127311923021
  DwDeployS3ManagedPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ListAccess
            Action:
              - 's3:ListBucket'
              - 's3:GetBucketLocation'
            Effect: Allow
            Resource: !GetAtt DwS3AppDeployBucket.Arn
          - Sid: ModAccess
            Action:
              - 's3:PutObject'
              - 's3:PutObjectAcl'
              - 's3:GetObject'
              - 's3:GetObjectAcl'
              - 's3:DeleteObject'
            Effect: Allow
            Resource: !Join
              - ''
              - - !GetAtt DwS3AppDeployBucket.Arn
                - '/*'
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group to grant EC2 instance access to DB instances
      VpcId: !ImportValue us-east-1-vpc-VPCId
      SecurityGroupIngress:
        -
          Description: "SynapseDw-VPC"
          CidrIp: !ImportValue us-east-1-vpc-VpcCidr
          FromPort: 3306
          ToPort: 3306
          IpProtocol: 'tcp'
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group to grant EC2 instance access to DB instances
      VpcId: !ImportValue us-east-1-vpc-VPCId
      SecurityGroupIngress:
        -
          Description: "SynapseDw-VPC"
          CidrIp: !ImportValue us-east-1-vpc-VpcCidr
          FromPort: 3306
          ToPort: 3306
          IpProtocol: 'tcp'

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for DB instance
      SubnetIds:
        - !ImportValue us-east-1-vpc-PrivateSubnet1
        - !ImportValue us-east-1-vpc-PrivateSubnet2

  DwBeanstalkServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - elasticbeanstalk.amazonaws.com
            Action:
              - 'sts:AssumeRole'
            Condition:
              StringEquals:
                sts:ExternalId: elasticbeanstalk
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth'
        - 'arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService'
  DwEC2ServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier'
        - 'arn:aws:iam::aws:policy/AmazonSNSFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonSESFullAccess'
        - !Ref DwDeployS3ManagedPolicy
  DwInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref DwEC2ServiceRole
  DwSNSBounceTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      Subscription:
        -
          Endpoint: !Ref SnsBounceNotificationEndpoint
          Protocol: "email"
  DwSNSTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      Subscription:
        -
          Endpoint: !Ref SnsNotificationEndpoint
          Protocol: "email"



Outputs:
  DwBeanstalkAppName:
    Value: !Ref DwBeanstalkApplication
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DWBeanstalkAppName'
  DwAppDeployBucket:
    Value: !Ref DwAppDeployBucket
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DWAppDeployBucketName'
  DwLoadBalancerAccessLogsBucket:
    Value: !Ref LoadBalancerAccessLogsBucket
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DWLoadBalancerAccessLogsBucketName'
  DBSecurityGroup:
    Value: !Ref DBSecurityGroup
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DBSecurityGroup'
  DBSubnetGroup:
    Value: !Ref DBSubnetGroup
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DBSubnetGroup'
  DwDeployS3ManagedPolicy:
    Value: !Ref DwDeployS3ManagedPolicy
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DWS3DeployManagedPolicy'
  DwBeanstalkServiceRole:
    Value: !Ref DwBeanstalkServiceRole
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DWBeanstalkServiceRole'
  DwInstanceProfile:
    Value: !Ref DwInstanceProfile
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DWInstanceProfile'